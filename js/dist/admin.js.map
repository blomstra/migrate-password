{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;AAAmC;AAEnCA,wEAAoB,CAAC,2BAA2B,EAAE,YAAM;EAEpDA,4EACQ,CAAC,2BAA2B,CAAC,CAChCI,eAAe,CAAC;IACbC,OAAO,EAAE,oDAAoD;IAC7DC,KAAK,EAAEN,wEAAoB,CAAC,kEAAkE,CAAC;IAC/FS,IAAI,EAAE;EACV,CAAC,CAAC,CACDL,eAAe,CAAC;IACbC,OAAO,EAAE,yDAAyD;IAClEC,KAAK,EAAEN,wEAAoB,CAAC,uEAAuE,CAAC;IACpGS,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;MACPC,GAAG,EAAE,KAAK;MACVC,MAAM,EAAE;IACV;EACJ,CAAC,CAAC;AACV,CAAC,CAAC;;;;;;;;;;;ACpBF;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@blomstra/migrate-password/./src/admin/index.ts","webpack://@blomstra/migrate-password/external root \"flarum.core.compat['admin/app']\"","webpack://@blomstra/migrate-password/webpack/bootstrap","webpack://@blomstra/migrate-password/webpack/runtime/compat get default export","webpack://@blomstra/migrate-password/webpack/runtime/define property getters","webpack://@blomstra/migrate-password/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/migrate-password/webpack/runtime/make namespace object","webpack://@blomstra/migrate-password/./admin.ts"],"sourcesContent":["import app from 'flarum/admin/app';\n\napp.initializers.add('blomstra-migrate-password', () => {\n\n    app.extensionData\n        .for('blomstra-migrate-password')\n        .registerSetting({\n            setting: 'blomstra-migrate-password.importing-password-field',\n            label: app.translator.trans('blomstra-migrate-password.admin.setting.importing-password-field'),\n            type: 'input',\n        })\n        .registerSetting({\n            setting: 'blomstra-migrate-password.importing-password-field-hash',\n            label: app.translator.trans('blomstra-migrate-password.admin.setting.importing-password-field-hash'),\n            type: 'select',\n            options: {\n              md5: 'MD5',\n              argon2: 'Argon 2'\n            }\n        });\n});\n","module.exports = flarum.core.compat['admin/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/admin';\n"],"names":["app","initializers","add","extensionData","registerSetting","setting","label","translator","trans","type","options","md5","argon2"],"sourceRoot":""}